#include<iostream>
#include<vector>
#include <iomanip>




using namespace std;

//factorial
int factorial(int n) 
{
    if (n <= 1) 
    {
        return 1;
    } 
    else 
    {
        return n * factorial(n-1);
    }
    return 0;
}

//combination
int combination(int a, int r) 
{
    if (r > a)
    {
        return -1;
    }

    return factorial(a) / (factorial(r) * factorial(a - r));
}

//greatest common multiple
int gcd(int a, int b)
{
    // Everything divides 0
    if (a == 0)
       return b;
    if (b == 0)
       return a;
  
    // base case
    if (a == b)
        return a;
  
    // a is greater
    if (a > b)
        return gcd(a-b, b);
    return gcd(a, b-a);
}
// lowest common multiple
int lcm(int a, int b) 
{
    int max = (a > b) ? a : b;
    do {
        if (max % a == 0 && max % b == 0) 
        {
            return max;
        } else 
        {
            max++;
        }
    } 
  while (true);
  
}

//multiplication table
int multiplicationTable(int n, int range)
{

   for (int i = 1; i <= range; ++i) 
    {
        cout << n << " * " << i << " = " << n * i  << endl;
    }
    
    return 0;
    
}

int main () 
{
  int F_num;
  cout << "enter factorial number\n";
  cin >> F_num;
  cout << "\n =" << factorial(F_num);


  int Com_num;
  int com_num;
  cout << "\n enter your 2 combination numbers\n";
  cin >> Com_num;
  cout << "\n";
  cin >> com_num;
  cout << "\n =" << combination(Com_num, com_num);

  int gdc_one;
  int gdc_two;
  cout << "\n enter the 2 numbers you want the GDC and LCM of: \n";
  cin >> gdc_one;
  cout <<"\n";
  cin >> gdc_two;
  cout << "\n GCD =" << gcd(gdc_one, gdc_two);
  cout << "\n LCM =" << lcm(gdc_one, gdc_two);


  int range;
  int number;
  cout << "\n";
  cout << "\n";
  cout << "Multiplication table\n";
  cout << "____________________\n";
  cout << "\n";
  cout << "Enter Range: ";
  cin >> range;
  cout << "\nEnter number being multiplied: ";
  cin >> number;
  cout << "\n";


  cout << multiplicationTable(number,range);
}
